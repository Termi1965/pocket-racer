namespace SpriteKind {
    export const Mycar = SpriteKind.create()
    export const Enemycar1 = SpriteKind.create()
    export const Enemycar2 = SpriteKind.create()
}
namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile1 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile2 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . 1 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
}
sprites.onOverlap(SpriteKind.Mycar, SpriteKind.Enemycar2, function (sprite, otherSprite) {
    scene.cameraShake(4, 500)
    info.changeLifeBy(-1)
    Car_Speed = -100
    Car.vy = Car_Speed
})
sprites.onDestroyed(SpriteKind.Mycar, function (sprite) {
    Create_My_Car()
    info.changeLifeBy(1)
})
function Draw_Trees () {
    for (let value of tiles.getTilesByType(sprites.castle.tilePath4)) {
        Tree = sprites.create(img`
. . . . . . . . . . . . . 6 6 6 6 . . . . . . . . . . . . . . . 
. . . . . . . . . . 6 6 6 6 6 7 7 6 6 . 6 6 6 6 . . . . . . . . 
. . . . . . . . . 6 7 7 7 7 7 7 7 7 7 6 7 7 7 6 . . . . . . . . 
. . . . . . 6 6 6 6 7 7 7 5 5 7 7 7 5 7 7 7 7 6 6 6 . . . . . . 
. . . . . 6 7 7 6 6 6 6 7 5 5 5 7 5 5 7 7 7 6 7 7 7 6 6 6 . . . 
. . . . . 6 7 7 6 7 7 7 7 7 5 5 5 5 5 7 7 7 7 7 7 6 6 7 7 6 . . 
. . . 6 6 6 6 6 7 7 7 7 7 7 7 7 5 7 7 7 7 7 7 7 6 6 6 6 6 . . . 
. 6 6 6 6 7 7 6 7 7 7 7 7 5 5 7 5 7 5 5 5 7 7 7 7 7 6 7 7 6 . . 
6 6 6 6 7 7 7 6 7 7 7 7 5 5 7 7 5 5 7 5 5 5 7 7 7 7 6 7 7 6 6 . 
. 6 6 6 7 7 6 7 7 7 7 7 7 7 7 7 5 5 7 7 7 7 7 7 7 7 7 6 7 6 6 6 
. c 6 7 6 6 7 7 7 6 7 7 7 7 7 7 7 5 7 7 7 7 7 7 6 7 7 7 6 6 . . 
c c 7 7 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 6 6 6 6 6 c 
c c 7 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 6 6 7 7 6 c 
c 6 6 6 6 7 7 6 7 7 7 7 7 7 7 7 7 7 7 7 7 6 6 6 7 7 6 6 6 7 7 6 
6 6 6 6 7 7 6 6 6 6 7 7 7 6 7 7 7 7 6 7 7 6 7 7 6 6 7 6 6 6 6 6 
c c c 7 6 6 7 7 6 7 7 7 7 6 6 7 7 7 6 6 7 6 7 7 7 6 7 7 6 c c c 
c c 7 7 6 6 7 7 6 7 7 7 6 7 7 6 7 7 6 7 6 6 6 7 7 6 7 7 6 6 c c 
. 6 6 6 c 6 7 6 6 6 7 6 7 7 7 6 6 6 6 7 7 6 6 6 6 6 6 6 6 c c . 
. c c c 6 6 6 7 6 6 6 6 7 7 6 6 6 6 6 7 7 6 7 7 6 6 6 c c c c . 
. . . c c c 7 7 c 6 7 6 7 6 6 6 6 7 6 6 7 6 6 7 7 6 6 6 c c c . 
. . . c c 6 7 6 c 7 7 6 6 6 7 6 6 7 7 6 6 6 6 6 6 c 6 6 6 c c . 
. . . . c 6 c c 6 7 6 c 6 6 7 7 6 7 7 c 6 6 c 6 6 6 c c c . . . 
. . . . c c c c c 6 c 6 6 6 6 7 6 6 7 c c 6 c c c 6 c c c . . . 
. . . . . . c c c c c 6 6 c 6 6 c 6 6 c c c c c c c c . . . . . 
. . . . . . . c c . c c 6 c 6 c c c 6 c c c c . c c . . . . . . 
. . . . . . . . . . . c c c c c c c c c c . . . . . . . . . . . 
. . . . . . . . . . . . . f e e e e e e . . . . . . . . . . . . 
. . . . . . . . . . . . f e e e e e e f e . . . . . . . . . . . 
. . . . . . . . . e e e e e f e e e f f e e . . . . . . . . . . 
. . . . . . . . . . . . f f f f e e f . . e e . . . . . . . . . 
. . . . . . . . . . . . . . . f e e . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . e . . . . . . . . . . . . . . . 
`, SpriteKind.Enemy)
        tiles.placeOnTile(Tree, value)
        tiles.setTileAt(value, sprites.castle.tileGrass1)
    }
}
function Create_My_Car () {
    Car = sprites.create(img`
. . . . . . 8 8 c c 8 8 . . . . 
. . . . . 8 6 6 6 6 6 6 8 . . . 
. . . . 6 c 6 6 6 6 6 6 c 6 . . 
. . . 8 6 c 9 6 6 6 6 6 c 6 8 . 
. . . f 6 6 9 6 6 6 6 6 c 6 f . 
. . . f 6 6 9 6 6 6 6 6 6 6 f . 
. . . f 6 6 9 6 6 6 6 6 6 6 f . 
. . . f 6 c 6 9 9 6 6 6 c 6 f . 
. . . 8 6 c 8 c c c c 8 c 6 8 . 
. . . 8 6 8 c b b b b c 8 6 8 . 
. . . 8 6 8 b b b b b b 8 6 8 . 
. . . 8 8 8 8 8 8 8 8 8 8 8 8 . 
. . . f 8 d 8 8 8 8 8 8 d 8 f . 
. . . f 8 6 d 8 8 8 8 d 6 8 f . 
. . . f f 8 8 8 8 8 8 8 8 f f . 
. . . . f f . . . . . . f f . . 
`, SpriteKind.Mycar)
    tiles.placeOnTile(Car, tiles.getTileLocation(5, 250))
    controller.moveSprite(Car, 40, 0)
    Car.setVelocity(0, Car_Speed)
    Car.setFlag(SpriteFlag.DestroyOnWall, true)
    scene.cameraFollowSprite(Car)
}
function Create_Enemy1 () {
    for (let value of tiles.getTilesByType(sprites.castle.tilePath5)) {
        Enemy_1 = sprites.create(img`
. . . . . . e e c c e e . . . . 
. . . . . e 2 2 2 2 2 2 e . . . 
. . . . 2 c 2 2 2 2 2 2 c 2 . . 
. . . e 2 c 4 2 2 2 2 2 c 2 e . 
. . . f 2 2 4 2 2 2 2 2 c 2 f . 
. . . f 2 2 4 2 2 2 2 2 2 2 f . 
. . . f 2 2 4 2 2 2 2 2 2 2 f . 
. . . f 2 c 2 4 4 2 2 2 c 2 f . 
. . . e 2 c e c c c c e c 2 e . 
. . . e 2 e c b b b b c e 2 e . 
. . . e 2 e b b b b b b e 2 e . 
. . . e e e e e e e e e e e e . 
. . . f e d e e e e e e d e f . 
. . . f e 2 d e e e e d 2 e f . 
. . . f f e e e e e e e e f f . 
. . . . f f . . . . . . f f . . 
`, SpriteKind.Enemycar1)
        Enemy_1.setVelocity(0, Math.randomRange(-50, -100))
        tiles.setTileAt(value, myTiles.tile0)
        tiles.placeOnTile(Enemy_1, value)
        Enemy_1.setFlag(SpriteFlag.DestroyOnWall, true)
    }
}
scene.onOverlapTile(SpriteKind.Mycar, myTiles.tile0, function (sprite, location) {
    Car.vy = Car_Speed
    info.changeScoreBy(1)
})
scene.onOverlapTile(SpriteKind.Mycar, sprites.castle.tileGrass1, function (sprite, location) {
    Car.vy = Slow_speed
})
sprites.onDestroyed(SpriteKind.Enemycar2, function (sprite) {
    Enemy2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . 3 3 3 3 3 3 . . . . 
. . . . . 3 3 d d 3 3 3 3 . . . 
. . . . . c d 3 3 3 3 3 c . . . 
. . . . 3 c d 3 3 3 3 3 c 3 . . 
. . . a 3 c d 3 3 3 3 3 c 3 a . 
. . . f 3 c d 3 3 3 3 3 c 3 f . 
. . . f a c 3 3 3 3 3 3 c a f . 
. . . f 3 c 3 b b b b 3 c 3 f . 
. . . a 3 3 b c c c c b 3 3 a . 
. . . a a b c c c c c c b a a . 
. . . f a d d d d d d d d a f . 
. . . f a d 3 3 3 3 3 3 d a f . 
. . . . 3 d d 3 3 3 3 d d 3 f . 
. . . . f 3 d 3 3 3 3 d 3 f . . 
. . . . . a 3 3 3 3 3 3 a . . . 
`, SpriteKind.Enemycar2)
    Enemy2.setVelocity(0, Math.randomRange(50, 100))
    tiles.placeOnTile(Enemy2, tiles.getTileLocation(Math.randomRange(2, 4), 3))
    Enemy2.setFlag(SpriteFlag.DestroyOnWall, true)
})
sprites.onDestroyed(SpriteKind.Enemycar1, function (sprite) {
    Enemy_1 = sprites.create(img`
. . . . . . e e c c e e . . . . 
. . . . . e 2 2 2 2 2 2 e . . . 
. . . . 2 c 2 2 2 2 2 2 c 2 . . 
. . . e 2 c 4 2 2 2 2 2 c 2 e . 
. . . f 2 2 4 2 2 2 2 2 c 2 f . 
. . . f 2 2 4 2 2 2 2 2 2 2 f . 
. . . f 2 2 4 2 2 2 2 2 2 2 f . 
. . . f 2 c 2 4 4 2 2 2 c 2 f . 
. . . e 2 c e c c c c e c 2 e . 
. . . e 2 e c b b b b c e 2 e . 
. . . e 2 e b b b b b b e 2 e . 
. . . e e e e e e e e e e e e . 
. . . f e d e e e e e e d e f . 
. . . f e 2 d e e e e d 2 e f . 
. . . f f e e e e e e e e f f . 
. . . . f f . . . . . . f f . . 
`, SpriteKind.Enemycar1)
    Enemy_1.setVelocity(0, Math.randomRange(-50, -100))
    tiles.placeOnTile(Enemy_1, tiles.getTileLocation(Math.randomRange(5, 7), 252))
    Enemy_1.setFlag(SpriteFlag.DestroyOnWall, true)
})
function Create_enemy2 () {
    for (let value of tiles.getTilesByType(sprites.castle.tilePath6)) {
        Enemy2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . 3 3 3 3 3 3 . . . . 
. . . . . 3 3 d d 3 3 3 3 . . . 
. . . . . c d 3 3 3 3 3 c . . . 
. . . . 3 c d 3 3 3 3 3 c 3 . . 
. . . a 3 c d 3 3 3 3 3 c 3 a . 
. . . f 3 c d 3 3 3 3 3 c 3 f . 
. . . f a c 3 3 3 3 3 3 c a f . 
. . . f 3 c 3 b b b b 3 c 3 f . 
. . . a 3 3 b c c c c b 3 3 a . 
. . . a a b c c c c c c b a a . 
. . . f a d d d d d d d d a f . 
. . . f a d 3 3 3 3 3 3 d a f . 
. . . . 3 d d 3 3 3 3 d d 3 f . 
. . . . f 3 d 3 3 3 3 d 3 f . . 
. . . . . a 3 3 3 3 3 3 a . . . 
`, SpriteKind.Enemycar2)
        Enemy2.setVelocity(0, Math.randomRange(50, 100))
        tiles.placeOnTile(Enemy2, value)
        tiles.setTileAt(value, myTiles.tile0)
        Enemy2.setFlag(SpriteFlag.DestroyOnWall, true)
    }
}
sprites.onOverlap(SpriteKind.Mycar, SpriteKind.Enemy, function (sprite, otherSprite) {
    scene.cameraShake(4, 500)
    info.changeLifeBy(-1)
    Car_Speed = -100
    Car.vy = Car_Speed
})
scene.onOverlapTile(SpriteKind.Mycar, sprites.castle.tileGrass3, function (sprite, location) {
    Car.vy = Slow_speed
})
info.onLifeZero(function () {
    game.over(false)
})
sprites.onOverlap(SpriteKind.Mycar, SpriteKind.Enemycar1, function (sprite, otherSprite) {
    scene.cameraShake(4, 500)
    info.changeLifeBy(-1)
    Car_Speed = -100
    Car.vy = Car_Speed
})
let Enemy2: Sprite = null
let Enemy_1: Sprite = null
let Tree: Sprite = null
let Car: Sprite = null
let Grass_Variation = 0
let Treespot = 0
let enemy2_spot = 0
let Enemy1_Spot = 0
let Slow_speed = 0
let Car_Speed = 0
Car_Speed = -100
Slow_speed = -25
info.setLife(5)
tiles.setTilemap(tiles.createTilemap(
            hex`0a00ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`,
            img`
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
. . . . . . . . . . 
`,
            [myTiles.tile0,sprites.castle.tilePath5,sprites.castle.tileGrass2,sprites.castle.tileGrass3,sprites.castle.tilePath6,sprites.castle.tilePath4,sprites.builtin.forestTiles7,sprites.builtin.forestTiles10,sprites.castle.tileGrass1,myTiles.tile1,myTiles.tile2],
            TileScale.Sixteen
        ))
for (let index = 0; index <= 252; index++) {
    Enemy1_Spot = Math.randomRange(0, 15)
    enemy2_spot = Math.randomRange(0, 30)
    Treespot = Math.randomRange(0, 20)
    for (let Index2 = 0; Index2 <= 1; Index2++) {
        Grass_Variation = Math.randomRange(0, 1)
        if (Grass_Variation == Index2) {
            tiles.setTileAt(tiles.getTileLocation(Index2 + 0, index + 1), sprites.castle.tileGrass3)
        } else {
            tiles.setTileAt(tiles.getTileLocation(Index2 + 0, index + 1), sprites.castle.tileGrass1)
        }
    }
    if (Treespot > 18) {
        tiles.setTileAt(tiles.getTileLocation(0, index + 1), sprites.castle.tilePath4)
    }
    for (let Index2 = 0; Index2 <= 3; Index2++) {
        if (Enemy1_Spot == Index2 && index + 1 < 249) {
            tiles.setTileAt(tiles.getTileLocation(Index2 + 5, index + 1), sprites.castle.tilePath5)
        }
    }
    for (let Index2 = 0; Index2 <= 2; Index2++) {
        if (enemy2_spot == Index2) {
            tiles.setTileAt(tiles.getTileLocation(Index2 + 2, index + 1), sprites.castle.tilePath6)
        }
    }
    for (let Index2 = 0; Index2 <= 1; Index2++) {
        if (Grass_Variation == Index2) {
            tiles.setTileAt(tiles.getTileLocation(Index2 + 8, index + 1), sprites.castle.tileGrass3)
        } else {
            tiles.setTileAt(tiles.getTileLocation(Index2 + 8, index + 1), sprites.castle.tileGrass1)
        }
    }
    if (Treespot < 2) {
        tiles.setTileAt(tiles.getTileLocation(9, index + 1), sprites.castle.tilePath4)
    }
}
for (let index = 0; index <= 254; index++) {
    tiles.setTileAt(tiles.getTileLocation(4, index), myTiles.tile2)
}
for (let Index2 = 0; Index2 <= 9; Index2++) {
    tiles.setTileAt(tiles.getTileLocation(Index2, 0), sprites.castle.tileGrass2)
    tiles.setWallAt(tiles.getTileLocation(Index2, 0), true)
}
for (let Index2 = 0; Index2 <= 9; Index2++) {
    tiles.setTileAt(tiles.getTileLocation(Index2, 252), sprites.castle.tileGrass2)
}
for (let Index2 = 0; Index2 <= 9; Index2++) {
    tiles.setWallAt(tiles.getTileLocation(Index2, 254), true)
}
Draw_Trees()
Create_My_Car()
Create_Enemy1()
Create_enemy2()
game.onUpdateInterval(500, function () {
    Car_Speed += -1
    Car.vy = Car_Speed
})
